name: Build, test and tag for release
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"

jobs:
  prepare:
    uses: ./.github/workflows/_prepare.yaml

  validate:
    uses: ./.github/workflows/_validate.yaml
    with:
      builder_image: ${{ needs.prepare.outputs.ci_builder_image }}
    needs:
      - prepare

  build:
    strategy:
      matrix:
        arch: [arm64, amd64]
    uses: ./.github/workflows/_build-and-upload.yaml
    with:
      # Only useful for the amd64 build as the builder will be an amd64 image
      builder_image: ${{ needs.prepare.outputs.ci_builder_image }}
      image: ghcr.io/${{ github.repository_owner }}/k6:${{ github.sha }}-${{ matrix.arch }}
      executable_name: k6-${{ matrix.arch }}
      platform: linux/${{ matrix.arch }}
    needs:
      - prepare

  build-multiarch:
    runs-on: ubuntu-22.04
    permissions:
      contents: "read"
      packages: "write"
    outputs:
      image: ghcr.io/${{ github.repository_owner }}/k6:${{ github.sha }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login ghcr.io
        shell: bash
        run: docker login --username ${{ github.repository_owner }} --password ${{ github.token }} ghcr.io
      - name: Create multiarch manifest
        run: |
          docker manifest create \
            ghcr.io/${{ github.repository_owner }}/k6:${{ github.sha }} \
            --amend ghcr.io/${{ github.repository_owner }}/k6:${{ github.sha }}-arm64 \
            --amend ghcr.io/${{ github.repository_owner }}/k6:${{ github.sha }}-amd64
      - run: docker manifest push ghcr.io/${{ github.repository_owner }}/k6:${{ github.sha }}
    needs:
      - build

  build-grafana:
    uses: ./.github/workflows/_build-grafana.yaml

  integration:
    uses: ./.github/workflows/_integration.yaml
    with:
      image: ${{ needs.build-multiarch.outputs.image }}
      builder_image: ${{ needs.prepare.outputs.ci_builder_image }}
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
    needs:
      - prepare
      - build-multiarch

  integration-cross-region:
    uses: ./.github/workflows/_integration.yaml
    with:
      image: ${{ needs.build-multiarch.outputs.image }}
      builder_image: ${{ needs.prepare.outputs.ci_builder_image }}
      region: eu-west-1
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
    needs:
      - prepare
      - build-multiarch

  release:
    uses: ./.github/workflows/_release.yaml
    with:
      builder_image: ${{ needs.prepare.outputs.ci_builder_image }}
    secrets:
      SSH_KEY_GITHUB: ${{ secrets.SSH_KEY_GITHUB }}
    needs:
      - prepare
      - build-multiarch
      - validate
      - integration
      - integration-cross-region
